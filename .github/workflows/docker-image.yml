name: Remo Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
    
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
   
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}    
          
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3      
    
    - name: Build and push Docker image
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
    - name: Setup cache
      uses: actions/cache@v3
      with:
          path: cache
          key: ${{ runner.os }}-cache-${{ hashFiles('**/sysdig-cli-scanner', '**/latest_version.txt', '**/db/main.db.meta.json', '**/scanner-cache/inlineScannerCache.db') }}
          restore-keys: ${{ runner.os }}-cache-

    - name: Download sysdig-cli-scanner if needed
      run:  |
          curl -o /tmp/sysdig-cli-scanner  "https://smtp.mattei.org/sysdig-cli-scanner"
          chmod +x /tmp/sysdig-cli-scanner
          ls -l /tmp; echo $2
          

         
    #- name: Build the Docker image
    #  run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
    #- uses: actions/checkout@v2 # Checking out the repo

    #- name: Build and push Docker image
    # uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
    #  with:
    #    context: .
    #   file: ./Dockerfile
    #   platforms: ${{ matrix.platforms }}
    #   push: true
    #   outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=My multi-arch image
    
